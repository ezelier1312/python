# -*- coding: utf-8 -*-
"""totem

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1orCK0HVzq8g3pRwdeMzB7oD2j3_mzgVD
"""

import re

personas = []

def validar_rut(rut):
    rut = rut.replace(".", "").replace("-", "")

    if not re.match(r"^\d{7,8}[0-9kK]$", rut):
        return False

    cuerpo_rut = rut[:-1]
    digito_verificador = rut[-1].lower()

    suma = 0
    multiplo = 2
    for d in reversed(cuerpo_rut):
        suma += int(d) * multiplo
        multiplo = 2 if multiplo == 7 else multiplo + 1
    resto = suma % 11
    digito_esperado = str(11 - resto) if resto > 1 else "0"


    return digito_verificador == digito_esperado


def imprimir_personas():
    print("Personas registradas:")
    for persona in personas:
        print(f"RUT: {persona['rut']}")
        print(f"Nombre: {persona['nombre']}")
        print(f"Edad: {persona['edad']}")
        print(f"País de nacimiento: {persona['pais_nacimiento']}")
        print(f"Ciudad de nacimiento: {persona['ciudad_nacimiento']}")
        print("-" * 20)


def grabar_persona():
    rut = input("Ingrese el RUT: ")
    nombre = input("Ingrese el nombre: ")
    edad = int(input("Ingrese la edad: "))
    pais_nacimiento = input("Ingrese el país de nacimiento: ")
    ciudad_nacimiento = input("Ingrese la ciudad de nacimiento: ")

    if not validar_rut(rut):
        print("RUT inválido. Por favor, ingrese un RUT válido.")
        return

    if edad < 0:
        print("La edad debe ser mayor o igual a 0.")
        return

    personas.append({
        "\trut": rut,
        "\tnombre": nombre,
        "\tedad": edad,
        "\tpais_nacimiento": pais_nacimiento,
        "\tciudad_nacimiento": ciudad_nacimiento
    })
    print("Registro exitoso.")


def buscar_persona():
    rut = input("Ingrese el RUT para buscar a la persona: ")
    encontrado = False

    for persona in personas:
        if persona["rut"] == rut:
            print("Información de la persona encontrada:")
            print("RUT:", persona["rut"])
            print("Nombre:", persona["nombre"])
            print("Edad:", persona["edad"])
            print("País de Nacimiento:", persona["pais_nacimiento"])
            print("Ciudad de Nacimiento:", persona["ciudad_nacimiento"])
            encontrado = True
            break

    if not encontrado:
        print("No se ha encontrado una persona con este RUT.")


def imprimir_certificados():
    for persona in personas:
        print("CERTIFICADO DE NACIMIENTO")
        print("-------------------------")
        print(f"RUT: {persona['rut']}")
        print(f"Nombre: {persona['nombre']}")
        print(f"Edad: {persona['edad']}")
        print(f"País de nacimiento: {persona['pais_nacimiento']}")
        print(f"Ciudad de nacimiento: {persona['ciudad_nacimiento']}")
        print()


def eliminar_persona():
    rut = input("Ingrese el RUT de la persona a eliminar: ")
    eliminado = False

    for persona in personas:
        if persona["rut"] == rut:
            personas.remove(persona)
            print("Registro eliminado correctamente.")
            eliminado = True
            break

    if not eliminado:
        print("No se ha encontrado una persona con este RUT.")


def menu():
    print("Registro Civil")
    print("1. Grabar persona")
    print("2. Buscar persona")
    print("3. Imprimir certificados")
    print("4. Eliminar persona")
    print("5. Imprimir lista de personas")
    print("6. Salir")


def opcion():
    while True:
        menu()
        opcion = input("Elija una opción: ")

        if opcion == "1":
            grabar_persona()
        elif opcion == "2":
            buscar_persona()
        elif opcion == "3":
            imprimir_certificados()
        elif opcion == "4":
            eliminar_persona()
        elif opcion == "5":
            imprimir_personas()
        elif opcion == "6":
            print("Gracias por usar el Registro Civil. ¡Hasta luego!")
            break
        else:
            print("Opción inválida. Por favor, ingrese una opción válida.")


opcion()